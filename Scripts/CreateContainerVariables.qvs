// -----------------------------------------------------------------------------
// Subroutine: CreateContainerVariables
// include this script in your QVW to get create container path variables
// no need to Call the subroutine as it is called in below script
// -----------------------------------------------------------------------------

SUB CreateContainerVariables(ContainerName, PathType) // left blank will return current Container, PathType can be relative or absoloute, left blank will be relative

// Global Variables start 'vG.'
// path of current document
LET vG.DocumentPath = left(DocumentPath(),Index(DocumentPath(),'\',-1)-1);

// Container name
LET vContainerName = IF(Isnull(ContainerName),'',ContainerName);

// container folder structure
ContainerFolder:
LOAD * INLINE [
    PhysicalFolderName, VariablePrefix, Subfolder, Comments
    00_Include, Include, , Folder where QlikView Include files are stored. These are script parts that are called from the main QlikView script.
    00_Config, Config, 00_Include, Configuration and language files like Excel and txt. This folders could be shared to make configuration changes easier
    01_ConnectionString, ConnectionString, 00_Include, Stores connection strings to data sources
    02_Metadata, Metadata, 00_Include, Metadata
    03_Scripts, Scripts, 00_Include, These are script parts that are called from the main QlikView script.
    04_Images, Images, 00_Include, images
    05_Icons, Icons, 00_Include, icons
    01_Source, Source, , root for QVD store
    02_QVDGenerator, QVDGenerator, , QlikView Generator files
    03_QVD, QVD, , QlikView Data files
    01_Source, QVDSource, 03_QVD, QlikView Data files
    02_Business, QVDBusiness, 03_QVD, QlikView Data files
    04_Models, Models, , QlikView Data models
    05_Applications, Applications, , QlikView Applications
];


FOR i = 0 to NoOfRows('ContainerFolder')-1

	LET vPhysicalFolderName = Peek(FieldName(1,'ContainerFolder'),$(i),'ContainerFolder');
	LET vVariablePrefix = Peek(FieldName(2,'ContainerFolder'),$(i),'ContainerFolder');
	LET vSubfolder = Peek(FieldName(3,'ContainerFolder'),$(i),'ContainerFolder');
	
	// add container and sub folder to the folder path 
	LET vG.$(vVariablePrefix) = IF('$(vContainerName)' <> '','$(vContainerName)\' )& IF('$(vSubfolder)' <> '','$(vSubfolder)\' )& '$(vPhysicalFolderName)';
	
	// loop folder levels untill the folder exists by using filesize()
	FOR vCount = 1 TO 10 // only loop 10 folder levels, if folder structure has more increase number
		
		// relative path starts '..\' and increase every level
		LET vRelativePath = repeat('..\',$(vCount)) & '$(vG.$(vVariablePrefix))';
		
		// absolute path  
		LET vAbsolutePath = Left('$(vG.DocumentPath)',Index('$(vG.DocumentPath)','\',-$(vCount))-1) & '\$(vG.$(vVariablePrefix))';
		
		// exit loop when relative path exists
		EXIT FOR When IsNull(FileSize('$(vRelativePath)')) = 0 ; 
				
	NEXT vCount
	
	IF Upper(PathType) = 'RELATIVE' OR IsNull(PathType) THEN	
		// relative path of container folder
		LET vG.$(vContainerName)$(vVariablePrefix)Path = If(NOT IsNull(FileSize('$(vRelativePath)')), '$(vRelativePath)', 'Could Not Find Path' );
	ELSE
		// relative path of container folder
		LET vG.$(vContainerName)$(vVariablePrefix)Path = If(NOT IsNull(FileSize('$(vAbsolutePath)')), '$(vAbsolutePath)', 'Could Not Find Path' );	
	ENDIF
	
	LET vG.$(vVariablePrefix) =;
	
NEXT i

SET vContainerName =;
SET i =;
SET vPhysicalFolderName =;
SET vVariablePrefix =;
SET vSubfolder =;
SET vCount =;
SET vRelativePath =;
SET vAbsolutePath =;

DROP TABLE ContainerFolder;

END SUB

CALL CreateContainerVariables; // relative paths for current qvw's container
CALL CreateContainerVariables('Shared','absolute'); // absolute paths to Shared container
