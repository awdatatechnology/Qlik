///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='Â£#,##0.00;-Â£#,##0.00';
SET TimeFormat='hh:mm:ss';
SET DateFormat='DD/MM/YYYY';
SET TimestampFormat='DD/MM/YYYY hh:mm:ss[.fff]';
SET FirstWeekDay=0;
SET BrokenWeeks=0;
SET ReferenceDay=4;
SET FirstMonthOfYear=1;
SET CollationLocale='en-GB';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';

///$tab Config
//================================================================================ 
// QVD Scripts 
//================================================================================ 
 
// define directory and store path 
SET vQVDDir = 'lib://Root'; 
 
///$tab Mapping 
// Only needed for the QVD Creator App Name.  
// This is dependent if you have access to the below Data Connection 
// If not then can me removed/commented out 
LIB CONNECT TO 'monitor_apps_REST_app'; 
 
// API Endpoint 
LET vURL = 'https://localhost/qrs/app/full'; 
SET vXrfkey = 0000000000000000; 
 
RestConnectorMasterTable: 
SQL SELECT 
"id", 
"name", 
    "__KEY_root" 
FROM JSON (wrap on) "root" PK "__KEY_root" 
WITH  CONNECTION ( 
URL "$(vURL)" 
,QUERY "xrfkey" "$(vXrfkey)" 
,HTTPHEADER "X-Qlik-Xrfkey" "$(vXrfkey)" 
); 
 
[MAP_app]: 
MAPPING LOAD 
[id] as [%appId], 
[name] as [appName] 
RESIDENT RestConnectorMasterTable 
WHERE NOT IsNull([__KEY_root]); 
 
DROP TABLE RestConnectorMasterTable; 

// empty row created incase REST data connection is not available and is commented out so ApplyMap does not fail.
[MAP_app]: 
MAPPING LOAD 
'' as [%appId], 
'' as [appName] 
AutoGenerate (1);





///$tab Script 
SUB DoDir (Root) 
FOR EACH File in filelist (Root&'\*.qvd') 
     
    
   [QVD_STEP1]: 
   LOAD 
   '$(File)' as [File], 
   FileName() as [FileName], 
   FileBaseName() as [FileBaseName], 
   FilePath() as [FilePath], 
   right(FileDir(),Len(FileDir()) - index(FileDir(),'/', 3))  as [FileDir], 
   FileExtension() as [FileExtension], 
   FileSize() as [FileSize], 
   num(FileSize() / 1000000,'#,##0.00 MB') as [FileSize MB], // or is it 1048576?
   FileTime() as [FileTime], 
   "FieldName" as [FieldName], 
   num(RowNo(),'0000') & ' - $(File)' as [FieldSortOrder] // includes file name as tables with same fields won't sort correctly 
   //    BitOffset, 
   //    BitWidth, 
   //    Bias, 
   //    NoOfSymbols, 
   //    Offset, 
   //    "Length", 
   //    "NumberFormat/Type", 
   //    "NumberFormat/nDec", 
   //    "NumberFormat/UseThou", 
   //    "NumberFormat/Dec", 
   //    "NumberFormat/Thou", 
   //    %Key_QvdTableHeader_B94FCCAC68ED3E20, 
   //    %Key_QvdFieldHeader_59D66ED49CFF179D 
   FROM [$(File)] 
   (XmlSimple, table is [QvdTableHeader/Fields/QvdFieldHeader]); 
 
  JOIN([QVD_STEP1]) 
  LOAD 
  '$(File)' as [File], 
  QvBuildNo, 
  CreatorDoc, 
  ApplyMap('MAP_app',CreatorDoc,CreatorDoc) as [QVDGenerator], // comment out if mapping table is removed/commented out 
  CreateUtcTime, 
  SourceFileSize, 
  "TableName", 
  //    RecordByteSize, 
  num(NoOfRecords, '#,##0') as NoOfRecords, 
  //    Offset, 
  //    "Length", 
  "Lineage/LineageInfo/Discriminator", 
  "Lineage/LineageInfo/Statement" 
  //    %Key_QvdTableHeader_B94FCCAC68ED3E20 
  FROM [$(File)] 
  (XmlSimple, table is QvdTableHeader); 

/*
  //Load first row from each QVD 
  [QVD_Data_Example_Step1]: 
  FIRST 1 LOAD * 
  FROM [$(File)] 
  (qvd); 
 
  KeyTable: 
  LOAD  
  '$(File)' as [File] 
  AutoGenerate 1; 
 
  FOR i=1 to NoOfFields('QVD_Data_Example_Step1') 
 
  TableFields: 
  Load 
    '$(File)' as [File], 
    FieldName($(i), 'QVD_Data_Example_Step1') as FieldName 
  AutoGenerate(1); 
 
  LET vField = Peek('FieldName',-1,'TableFields'); 
 
  Join(KeyTable) 
  Load 
    '$(File)' as [File], 
    NoOfFields('QVD_Data_Example_Step1') as NoOfFields, 
    RecNo() as RecNo, 
    $(i) as FieldNo, 
    Text(if(isnull([$(vField)]),'',[$(vField)])) as [$(vField)_NewTextField] // suffixed with '_NewTextField' as to not use same format as an existing field 
  resident [QVD_Data_Example_Step1]; 
 
  NEXT 
 
  Drop Table TableFields; 
  Drop Table [QVD_Data_Example_Step1]; 
 
  // crosstable data to get a column of field names and a column of example data 
  [QVD_Data_Example_Step2]: 
  CrossTable(FieldName, Example,4) // crosstable after File, NoOfFields, RecNo, FieldNo fields 
  LOAD 
      * 
  Resident [KeyTable]; 
   
  DROP TABLE [KeyTable]; 
 
  // join to QVD based on File and FieldName to give example of data for each field 
  JOIN([QVD_STEP1]) 
  LOAD 
  [File], 
  [NoOfFields], 
  [FieldNo], 
  Replace([FieldName], '_NewTextField','') as [FieldName], 
  MaxString([Example]) as [Example_MaxString], 
  FirstValue(Example) as [Example_FirstValue], 
  Text(Concat(DISTINCT [Example],'|')) as [Example] 
  Resident [QVD_Data_Example_Step2] 
  GROUP BY [File], [NoOfFields], [FieldNo], [FieldName]; 
 
  DROP TABLE [QVD_Data_Example_Step2]; 
*/

  // automatically concatenates data for each loop 
  [QVD_STEP2]: 
  LOAD 
  *, 
  'TEMP' as TEMP 
  Resident [QVD_STEP1]; 
 
  DROP TABLE [QVD_STEP1]; 
      
NEXT File 
 
FOR EACH Dir in dirlist (Root&'\*' ) 
      call DoDir (Dir) 
NEXT Dir 
 
//DROP FIELD TEMP; 
END SUB 
 
 
CALL DoDir ('$(vQVDDir)') 
 
// replace substring in script row 
MAP_Replace: 
MAPPING LOAD * INLINE [ 
Replace, With 
'<TAB>','    ' 
]; 
 
//create Load Script 
[Script]: 
LOAD 
[File], 
    MapSubString('MAP_Replace', [Load Script]) as [Load Script] 
    ; 
LOAD 
[File], 
'['& [FileBaseName] &']: 
LOAD 
'& Concat('<TAB>[' & [FieldName] &']', ', 
', left([FieldSortOrder],4)) &' 
FROM ['& [FilePath] &'] 
(qvd);' as [Load Script], 
'['& [FileBaseName] &']: 
LOAD 
'& Concat('<TAB>[' & [FieldName] &'] as [' & [FieldName] &']', ', 
', left([FieldSortOrder],4)) &' 
FROM ['& [FilePath] &'] 
(qvd);' as [Load Script With Alias]  
RESIDENT [QVD_STEP2] 
GROUP By 
    [File], 
    [FileBaseName], 
    [FilePath] 
; 
 
 
SET vQVDDir =; 
SET File =; 
SET Dir =; 
 

maxCount:
LOAD
max(SubStringCount(FieldValue('FileDir',RecNo()), '/')) as FileDir_maxCount
AutoGenerate FieldValueCount('FileDir');

let maxCount = peek('FileDir_maxCount',0);
TRACE maxCount = $(maxCount);
DROP TABLE maxCount;

Dir:
LOAD
FieldValue('FileDir',RecNo()) as FileDir
AutoGenerate FieldValueCount('FileDir');

FOR x = 1 to maxCount +1

Left Join(Dir)
Load
[FileDir],
SubField([FileDir],'/',$(x)) as [Dir_Level_$(x)]
Resident Dir;

NEXT x


EXIT SCRIPT; 
